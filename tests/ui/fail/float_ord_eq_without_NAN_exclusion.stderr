error: expected `,`
  --> tests/ui/fail/float_ord_eq_without_NAN_exclusion.rs:33:8
   |
33 |     cfg(toto, validators(not_nan)),
   |        ^

error[E0277]: the trait bound `f64: Ord` is not satisfied
 --> tests/ui/fail/float_ord_eq_without_NAN_exclusion.rs:6:14
  |
5 | #[nnn(derive(PartialEq, Eq, PartialOrd, Ord))]
  |                                         --- in this derive macro expansion
6 | struct Float(f64);
  |              ^^^ the trait `Ord` is not implemented for `f64`
  |
  = help: the following other types implement trait `Ord`:
            i128
            i16
            i32
            i64
            i8
            isize
            u128
            u16
          and $N others
  = note: this error originates in the derive macro `Ord` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `f64: std::cmp::Eq` is not satisfied
 --> tests/ui/fail/float_ord_eq_without_NAN_exclusion.rs:6:14
  |
5 | #[nnn(derive(PartialEq, Eq, PartialOrd, Ord))]
  |                         -- in this derive macro expansion
6 | struct Float(f64);
  |              ^^^ the trait `std::cmp::Eq` is not implemented for `f64`
  |
  = help: the following other types implement trait `std::cmp::Eq`:
            i128
            i16
            i32
            i64
            i8
            isize
            u128
            u16
          and $N others
note: required by a bound in `AssertParamIsEq`
 --> $RUST/core/src/cmp.rs
  |
  | pub struct AssertParamIsEq<T: Eq + ?Sized> {
  |                               ^^ required by this bound in `AssertParamIsEq`
  = note: this error originates in the derive macro `Eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `f64: Ord` is not satisfied
  --> tests/ui/fail/float_ord_eq_without_NAN_exclusion.rs:13:20
   |
12 | #[nnn(derive(PartialEq, Eq, PartialOrd, Ord), cfg(test, validators(finite)))]
   |                                         --- in this derive macro expansion
13 | struct FiniteFloat(f64);
   |                    ^^^ the trait `Ord` is not implemented for `f64`
   |
   = help: the following other types implement trait `Ord`:
             i128
             i16
             i32
             i64
             i8
             isize
             u128
             u16
           and $N others
   = note: this error originates in the derive macro `Ord` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `f64: std::cmp::Eq` is not satisfied
  --> tests/ui/fail/float_ord_eq_without_NAN_exclusion.rs:13:20
   |
12 | #[nnn(derive(PartialEq, Eq, PartialOrd, Ord), cfg(test, validators(finite)))]
   |                         -- in this derive macro expansion
13 | struct FiniteFloat(f64);
   |                    ^^^ the trait `std::cmp::Eq` is not implemented for `f64`
   |
   = help: the following other types implement trait `std::cmp::Eq`:
             i128
             i16
             i32
             i64
             i8
             isize
             u128
             u16
           and $N others
note: required by a bound in `AssertParamIsEq`
  --> $RUST/core/src/cmp.rs
   |
   | pub struct AssertParamIsEq<T: Eq + ?Sized> {
   |                               ^^ required by this bound in `AssertParamIsEq`
   = note: this error originates in the derive macro `Eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `f64: Ord` is not satisfied
  --> tests/ui/fail/float_ord_eq_without_NAN_exclusion.rs:27:21
   |
26 | #[nnn(derive(PartialEq, Eq, PartialOrd, Ord), cfg(test, validators(not_nan)))]
   |                                         --- in this derive macro expansion
27 | struct FiniteFloat3(f64);
   |                     ^^^ the trait `Ord` is not implemented for `f64`
   |
   = help: the following other types implement trait `Ord`:
             i128
             i16
             i32
             i64
             i8
             isize
             u128
             u16
           and $N others
   = note: this error originates in the derive macro `Ord` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `f64: std::cmp::Eq` is not satisfied
  --> tests/ui/fail/float_ord_eq_without_NAN_exclusion.rs:27:21
   |
26 | #[nnn(derive(PartialEq, Eq, PartialOrd, Ord), cfg(test, validators(not_nan)))]
   |                         -- in this derive macro expansion
27 | struct FiniteFloat3(f64);
   |                     ^^^ the trait `std::cmp::Eq` is not implemented for `f64`
   |
   = help: the following other types implement trait `std::cmp::Eq`:
             i128
             i16
             i32
             i64
             i8
             isize
             u128
             u16
           and $N others
note: required by a bound in `AssertParamIsEq`
  --> $RUST/core/src/cmp.rs
   |
   | pub struct AssertParamIsEq<T: Eq + ?Sized> {
   |                               ^^ required by this bound in `AssertParamIsEq`
   = note: this error originates in the derive macro `Eq` (in Nightly builds, run with -Z macro-backtrace for more info)
